#include <cstdint>
#include <NdGameSdk/sdkstringid.hpp>

type int 4 [[i32]]
type uint64_t 8 [[u64]]
type uintptr_t 8 [[u64]]
type uint32_t 4 [[u32]]
type size_t 8 [[u32]]
type uint16_t 2 [[u16]]
type uint8_t 1 [[u8]]
type bool 1 [[bool]]
type void 0
type char 1
type float 4 [[f32]]
type double 8
type StringId64 8 [[u64]]
   

namespace regenny {

    struct process 0x100 {}

    struct RelocatableHeapRecord {
        process* PTR;
     }


// c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src
namespace shared {

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib
    namespace ndlib {

    struct EngineComponents {
        enum Component : uint32_t {
	        NdGameInfo = 0x0,
	        NdFrameState = 0x1,
	        PhotoModeManager = 0x2,
	        FileSystem = 0x3,
	        PackageMgr = 0x4,
	        LevelMgr = 0x6,
	        LevelStreamingMgr = 0x7,
	        NdMessageManager = 0x8,
	        PSNTelemetry = 0xA,
	        AudioManager = 0xB,
	        NdDialogManager = 0xE,
	        NavMeshMgr = 0xF,
	        NpcManager = 0x10,
	        AnimMgr = 0x11,
	        FgDrawMgr = 0x12,
	        ProcessMgr = 0x13,
	        AnimStreamManager = 0x15,
	        TextureMgrPub = 0x18,
            ParticleDebug = 0x1D // I suppose so
        }; // 0x146428180 (engine-components.hpp)
    }

    struct NdConfig {
        enum Config : uint32_t {
            NetInfo = 0x0, // m_pNetInfo
            DMENU = 0x1,
            NdDevMenu = 0x2,
            NameCache = 0x7 // m_pNameCache
        }; // 0x143646c80 (nd-config.hpp)
    }

    struct NdGameInfo 0x45c0 {
        void* vftable;
        char m_SavePath[0x400] + 0x120 [[utf8*]]
        char m_SavePath_unk[0x400] [[utf8*]]
        char m_GamePath[0x400] [[utf8*]]
        char m_GamePath_unk[0x400] [[utf8*]]
        char m_NetUserPath[0x400] [[utf8*]]
        char m_NetPath[0x400] [[utf8*]]
        char m_GameDataPath[0x400] [[utf8*]]
        char m_GameDataPath_unk[0x400] [[utf8*]]
        char m_BinPath[0x400] [[utf8*]]
        char m_BinPath_unk[0x400] [[utf8*]]
        char m_BranchName[0x40] [[utf8*]]
        char m_SrcPath[0x400] [[utf8*]]
        char m_DbPath[0x400] [[utf8*]]
        char m_GamePath_unk2[0x400] [[utf8*]]
        char m_GamePath_unk3[0x400] +0x402 [[utf8*]]
        char m_CfgPath[0x80] [[utf8*]]
        char m_CfgDefaultsPath[0x80] [[utf8*]]
        uint16_t Unk_3ef0 +0x85
        bool Unk_3ef1 [[bool*]]
        bool m_DevConfig [[bool*]]
        bool m_onDisc [[bool*]]
        bool m_onDiscUseManifest [[bool*]]
        bool Unk_3ef5 [[bool*]]
        bool Unk_3ef6 [[bool*]]
        bool Unk_3ef7 [[bool*]]
        bool Unk_3ef8 [[bool*]]
        bool Unk_3ef9 [[bool*]]
        bool Unk_3efa [[bool*]]
        bool Unk_3efb [[bool*]]
        bool Unk_3efc [[bool*]]
        bool Unk_3efd [[bool*]]
        bool Unk_3efe [[bool*]]
        bool Unk_3eff [[bool*]]
        bool Unk_3f00 [[bool*]]
        bool Unk_3f01 [[bool*]]
        bool Unk_3f02 [[bool*]]
        bool Unk_3f03 [[bool*]]
        bool Unk_3f04 [[bool*]]
        bool Unk_3f05 [[bool*]]
        bool Unk_3f06 [[bool*]]
        bool Unk_3f07 [[bool*]]
        bool Unk_3f08 [[bool*]]
        bool Unk_3f09 [[bool*]]
        bool Unk_3f0a [[bool*]]
        bool Unk_3f0b [[bool*]]
        bool Unk_3f0c [[bool*]]
        bool Unk_3f0d [[bool*]]
        bool Unk_3f0e [[bool*]]
        bool Unk_3f0f [[bool*]]
        bool Unk_3f10 [[bool*]]
        bool Unk_3f11 [[bool*]]
        bool Unk_3f12 [[bool*]]
        bool Unk_3f13 [[bool*]]
        bool Unk_3f14 [[bool*]]
        bool Unk_3f15 [[bool*]]
        bool Unk_3f16 [[bool*]]
        bool Unk_3f17 [[bool*]]
        bool Unk_3f18 [[bool*]]
        bool Unk_3f19 [[bool*]]
        bool Unk_3f1a [[bool*]]
        bool Unk_3f1b [[bool*]]
        bool m_IsMultiplayer [[bool*]]
        bool Unk_3f1d [[bool*]]
        bool Unk_3f1e [[bool*]]
        bool Unk_3f1f [[bool*]]
        bool Unk_3f20 [[bool*]]
        bool Unk_3f21 [[bool*]]
        bool Unk_3f22 [[bool*]]
        bool Unk_3f23 [[bool*]]
        bool Unk_3f24 [[bool*]]
        bool Unk_3f25 [[bool*]]
        bool Unk_3f26 [[bool*]]
        bool Unk_3f27 [[bool*]]
        bool Unk_3f28 [[bool*]]
        bool Unk_3f29 [[bool*]]
        bool Unk_3f2a [[bool*]]
        bool Unk_3f2b [[bool*]]
        bool Unk_3f2c [[bool*]]
        bool Unk_3f2d [[bool*]]                          
        bool Unk_3f2e [[bool*]]
        bool m_DevMode [[bool*]]
        bool Unk_3f30 [[bool*]]
        bool Unk_3f31 [[bool*]]
        bool Unk_3f32 [[bool*]]
        bool Unk_3f33 [[bool*]]
        bool Unk_3f34 [[bool*]]
        bool Unk_3f35 [[bool*]]
        bool Unk_3f36 [[bool*]]
        bool Unk_3f37 [[bool*]]
        bool Unk_3f38 [[bool*]]
        bool Unk_3f39 [[bool*]]
        bool Unk_3f3a [[bool*]]
        bool Unk_3f3b [[bool*]]
        bool Unk_3f3c [[bool*]]
        bool Unk_3f3d [[bool*]]
        bool Unk_3f3e [[bool*]]
        bool Unk_3f3f [[bool*]]
        bool Unk_3f40 [[bool*]]
        bool Unk_3f41 [[bool*]]
        bool Unk_3f42 [[bool*]]
        bool Unk_3f43 [[bool*]]
        bool Unk_3f44 [[bool*]]
        bool Unk_3f45 [[bool*]]
        bool Unk_3f46 [[bool*]]
        bool Unk_3f47 [[bool*]]
        bool Unk_3f48 [[bool*]]
        bool Unk_3f49 [[bool*]]
        bool Unk_3f4a [[bool*]]
        bool Unk_3f4b [[bool*]]
        bool Unk_3f4c [[bool*]]
        bool Unk_3f4d [[bool*]]
        bool Unk_3f4e [[bool*]]
        bool Unk_3f4f [[bool*]]
        bool Unk_3f50 [[bool*]]
        bool Unk_3f51 [[bool*]]
        bool Unk_3f52 [[bool*]]
        bool Unk_3f53 [[bool*]]
        bool Unk_3f54 [[bool*]]
        bool Unk_3f55 [[bool*]]
        bool Unk_3f56 [[bool*]]
        bool Unk_3f57 [[bool*]]
        uint32_t Unk_3f58
        bool Unk_3f5c [[bool*]]
        bool Unk_3f5d [[bool*]]
        bool Unk_3f5e [[bool*]]
        bool Unk_3f5f [[bool*]]
        uint32_t Unk_3f60
        bool Unk_3f64 [[bool*]]
        bool Unk_3f65 [[bool*]]
        bool Unk_3f66 [[bool*]]
        bool Unk_3f67 [[bool*]]
        bool Unk_3f68 [[bool*]]
        bool Unk_3f69 [[bool*]]
        bool Unk_3f6a [[bool*]]
        bool Unk_3f6b [[bool*]]
        bool Unk_3f6c [[bool*]]
        bool Unk_3f6d [[bool*]]
        bool Unk_3f6e [[bool*]]
        bool Unk_3f6f [[bool*]]
        bool Unk_3f70 [[bool*]]
        bool Unk_3f71 [[bool*]]
        bool Unk_3f72 [[bool*]]
        bool Unk_3f73 [[bool*]]
        bool Unk_3f74 [[bool*]]
        bool Unk_3f75 [[bool*]]
        bool Unk_3f76 [[bool*]]
        bool Unk_3f77 [[bool*]]
        bool Unk_3f78 [[bool*]]
        bool Unk_3f79 [[bool*]]
        bool Unk_3f7a [[bool*]]
        bool Unk_3f7b [[bool*]]
        bool Unk_3f7c [[bool*]]
        bool Unk_3f7d [[bool*]]
        bool Unk_3f7e [[bool*]]
        bool Unk_3f7f [[bool*]]
        bool Unk_3f80 [[bool*]]
        bool Unk_3f81 [[bool*]]
        bool Unk_3f82 [[bool*]]
        bool Unk_3f83 [[bool*]]
        bool Unk_3f84 [[bool*]]
        bool Unk_3f85 [[bool*]]
        bool Unk_3f86 [[bool*]]
        bool Unk_3f87 [[bool*]]
        bool Unk_3f88 [[bool*]]
        bool Unk_3f89 [[bool*]]
        bool Unk_3f8a [[bool*]]
        bool Unk_3f8b [[bool*]]
        bool Unk_3f8c [[bool*]]
        bool Unk_3f8d [[bool*]]
        bool Unk_3f8e [[bool*]]
        bool Unk_3f8f [[bool*]]
        bool Unk_3f90 [[bool*]]
        bool Unk_3f91 [[bool*]]
        bool Unk_3f92 [[bool*]] // smoketest
        bool Unk_3f93 [[bool*]]
        bool Unk_3f94 [[bool*]]
        bool Unk_3f95 [[bool*]]
        bool Unk_3f96 [[bool*]]
        bool Unk_3f97 [[bool*]]
        bool Unk_3f98 [[bool*]]
        bool Unk_3f99 [[bool*]]
        bool Unk_3f9a [[bool*]]
        bool Unk_3f9b [[bool*]]
        bool Unk_3f9c [[bool*]]
        bool Unk_3f9d [[bool*]]
        bool Unk_3f9e [[bool*]]
        bool Unk_3f9f [[bool*]]
        uint32_t Unk_3fa0
        bool Unk_3fa4 [[bool*]]
        bool Unk_3fa5 [[bool*]]
        bool Unk_3fa6 [[bool*]]
        bool Unk_3fa7 [[bool*]]
        bool Unk_3fa8 [[bool*]]
        bool Unk_3fa9 [[bool*]]
        bool Unk_3faa [[bool*]]
        bool Unk_3fab [[bool*]]
        bool Unk_3fac [[bool*]]
        bool Unk_3fad [[bool*]]
        bool Unk_3fae [[bool*]]
        bool Unk_3faf [[bool*]]
        bool Unk_3fb0 [[bool*]]
        bool Unk_3fb1 [[bool*]]
        bool Unk_3fb2 [[bool*]]
        bool Unk_3fb3 [[bool*]]
        bool Unk_3fb4 [[bool*]]
        bool Unk_3fb5 [[bool*]]
        bool Unk_3fb6 [[bool*]]
        bool Unk_3fb7 [[bool*]]
        bool Unk_3fb8 [[bool*]]
        bool Unk_3fb9 [[bool*]]
        bool Unk_3fba [[bool*]]
        bool Unk_3fbb [[bool*]]
        uint32_t Unk_3fbc
        bool Unk_3fc0 [[bool*]]
        bool Unk_3fc1 [[bool*]]
        bool Unk_3fc2 [[bool*]]
        bool Unk_3fc3 [[bool*]]
        bool Unk_3fc4 [[bool*]]
        bool Unk_3fc5 [[bool*]]
        bool Unk_3fc6 [[bool*]]
        bool Unk_3fc7 [[bool*]]
        bool Unk_3fc8 [[bool*]]
        bool Unk_3fc9 [[bool*]]
        bool Unk_3fca [[bool*]]
        bool Unk_3fcb [[bool*]]
        bool Unk_3fcc [[bool*]]
        bool Unk_3fcd [[bool*]]
        bool Unk_3fce [[bool*]]
        bool Unk_3fcf [[bool*]]
        bool Unk_3fd0 [[bool*]]
        bool Unk_3fd1 [[bool*]]
        bool Unk_3fd2 [[bool*]]
        bool Unk_3fd3 [[bool*]]
        bool Unk_3fd4 [[bool*]]
        bool Unk_3fd5 [[bool*]]
        bool Unk_3fd6 [[bool*]]
        bool Unk_3fd7 [[bool*]]
        char m_DiscUser[0x18] +0x30 [[utf8*]]
        StringId64 AudioStringId +0x160
        char m_GameStudio[0x40] +0x2db [[utf8*]]
    }

    struct NdFrameState 0x288a0 {
        void* vftable;
        uint64_t m_gameFrameNumber @ 0x40
        bool m_KeyboardDevMode @ 0x51a // Enable toggle devmode menu via the keyboard
    } 

    /*
        struct NetInfo 0x238 {
            char NetUserId[0x400] + 0x3C [[utf8*]]
        }
    */

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib\debug
    namespace debug {

        struct DMENU 0x670 {

            enum Message : uint32_t
            {
                OnOpen = 0x0,
                OnClose = 0x1,
                OnUpdate = 0x3,
                OnExecute = 0x5,
                ReadConfig = 0x7,
                SaveConfig = 0x8
            };

            // DMENU::Component (class_DMENU::Component_vfTable)
            struct Component 0xb0 {
                struct VTable 0xb0 {}
                void* vftable;
                void* UnkString;
                char m_name[0x20] [[utf8*]] // (Only if string length is less than 32 characters)
                char* m_pname [[utf8*]];
                Component* m_pSubMenu;
                Component* m_NextDMenuComponent;
                uint64_t Unk2[0x3];
                uint64_t m_data; // For arguments or link variable
                uint32_t m_color;
                uint32_t m_selectcolor;
                uint32_t m_editedcolor; // maybe
                bool m_Islinked; // BY KEY ID
                char* m_pDescription +0xb [[utf8*]];
                bool m_atsign;
                Component* m_MenuGroup + 0x7;
                bool m_isfavorite + 0x1;
                int m_PagePointer +0x6; // Only with menu component?
                int m_MaxPagePointers;
                uint64_t m_ExtraArg;
            } // 0x14041c8b0

            // DMENU::Menu | DMENU::ItemSubmenu
            struct Menu : Component 0x30 {
                Component* m_Item;
                bool m_isActive + 0x4;
                uint64_t m_pad : 2;
                int m_MaxDisplayItems +0x7;
                uint64_t Unk[0x2];
            } // 0x14041ec20

            // DMENU::MenuGroup
            struct MenuGroup : Component 0x280 {
                Menu* m_RootMenu;
                bool m_IsDisplayed + 0x8;
                bool m_Rendering;
                uint16_t Unk[0x3];
                uint64_t Unk2[0x4d];
            } // 0x14041eca0

            // DMENU::Item (class_Dmenu::Item_vfTable)
            struct Item : Component 0x8  {
                struct VTable : DMENU.Component.VTable 0x48 {}
                void* m_callbackFunct;
            } // 0x14041e6b0

            // DMENU::ItemSubmenu
            struct ItemSubmenu : Item 0x10  {
                Menu* m_pHeader; // Entry Pointer
                uint64_t Unk[0x1];
            } // 0x14041ea90

            // DMENU::ItemBool
            // Component.m_data - ValuePtr
            struct ItemBool : Item 0x8  {
               bool m_status;
               bool m_pad[0x7];
            } // 0x14041cd70
            
            // DMENU::ItemDecimal* 
            // Component.m_data - ValuePtr
            struct ItemDecimal : Item 0xb8  {
                uint64_t* m_format; // format Printf %d 
                void* m_HandlerFunc; // handler slider function 
                uint64_t m_DisplayValue [[i64]];
                uint64_t UnkDouble [[i64]];
                uint64_t m_MinValue [[i64]];
                uint64_t m_MaxValue [[i64]];
                uint64_t m_StepValue [[i64]];
                uint64_t m_DoubleStepValue [[i64]];
                uint64_t Unk2[0x7];
                char m_StringDisplayValue[0x20] [[utf8*]];
                uint64_t Unk3[0x4];
            } // 0x14041cd70

            // DMENU::ItemFloat* 
            // Component.m_data - ValuePtr
            struct ItemFloat : Item 0x98  {
                uint64_t* m_format; // format Printf %6.2f
                void* m_HandlerFunc; // handler slider function 
                float m_DisplayValue;
                float UnkFloat;
                float m_MinValue;
                float m_MaxValue;
                float m_StepValue;
                float m_DoubleStepValue;
                uint64_t Unk2[0x6];
                char m_StringDisplayValue[0x20] [[utf8*]];
                uint64_t Unk3[0x4];
            } // 0x14041d960

            // DMENU::ItemFunction 
            struct ItemFunction : Item 0x10  {
                void* unkData; // probably for link key->value
                bool m_isActive @ 0xc1;
                bool m_pad[0x6];
            } // 0x14041dad0

             // DMENU::ItemSelection* 
            struct ItemSelection : Item 0x30  {
                void* UnkData; // m_format probably
                void* m_callbackFormat;
                uint64_t Unk2[0x3];
                void* m_SelectionStruct;
            } // 0x14041d610

            // DMENU::ItemSubText*
            struct ItemSubText : Item {} // 0x14041e6b0;

            // DMENU::ItemLine*
            struct ItemLine : Component {} // 0x14041d490;

            void* vftable;
            bool m_Text2DropShadows +0x8
            bool m_PauseDuringMenus
            bool m_PauseDuringMenusMP
            bool m_Pauseonexit
            bool m_ShowPausedIndicator
            bool UnkBool;
            bool m_SquareButtontoBackOutofMenus
            bool m_ChordtoSave
            bool m_AlignMenusRight
            double m_Rightmargin +0x3 [[f64]]
            double m_MenuScale [[f64]]
            bool m_Pause +0x35
            MenuGroup* m_CurrentMenu +0xe [[u64]]
            MenuGroup* m_QuickMenu
            MenuGroup* m_DevMenu [[u64]]
            MenuGroup* m_FavoritesMenu [[u64]]
            uint64_t Unk2[0xbc];
        }  
    }

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib\script
    namespace script {
        
        // script-manager.cpp
        struct ScriptManager 0x33b0 {
            uint64_t field_0;
            uint64_t field_10 @ 0x10;
            uint32_t field_18;
            uint64_t field_20 @ 0x20;
            uint64_t field_30 @ 0x30;
            bool field_40 @ 0x40;
            bool DisplayRequestedModules @ 0x43;
            uint32_t field_44 @ 0x44;
            uint32_t field_4a @ 0x4a;
            uint16_t field_4e;
            uint32_t field_51 @ 0x51;
            bool DisplayGlobalSymbols;
            bool field_56;
            uint32_t field_58 @ 0x58;
            uint16_t field_5c;
            bool field_5e;
            uint32_t field_60 @ 0x60;
            uint64_t field_68 @ 0x68;
            uint64_t field_70;
            uint64_t field_78;
            uint64_t field_e8 @ 0xe8;
            uint64_t field_100 @ 0x100;
            uint32_t field_108;
            uint32_t field_10c;
            uint64_t field_110;
            uint64_t field_118;
            uint64_t field_120;
            uint32_t field_1b0 @ 0x1b0;
            uint32_t field_1b8 @ 0x1b8;
            uint64_t field_1c0 @ 0x1c0;
            uint64_t field_1c8;
            uint64_t field_1d0;
            uint32_t field_260 @ 0x260;
            uint32_t field_264;
            uint64_t field_288 @ 0x288;
            uint64_t field_290;
            uint64_t field_298;
            char pad_2A0[0x2790] @ 0x02a0 [[utf8*]];
            char pad_2A30[0x450] [[utf8*]];
            uint64_t field_2e80;
            char pad_2E88[0x468];
            uint64_t field_3338 @ 0x3338;
            bool field_3340;
            bool field_336b @ 0x336b;
            bool field_336c;
            bool field_336d;
            bool field_3371 @ 0x3371;
            uint32_t field_3380 @ 0x3380;
            uint64_t field_3388 @ 0x3388;
            uint64_t field_3390;
            uint64_t field_3398;
            uint32_t field_33a0;
            uint64_t field_33a8 @ 0x33a8;
        }; // s_scriptmanager* (0x146430e70)

        struct ScriptValue {
            uint64_t val[0x10];
        };

        struct ScriptCFunc {
            void** c_func_caller;
            void* c_script_func; 
        };
    }

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib\process
    namespace process {
        struct process 0x100 {}
    }

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib\render
    namespace render {

        // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\ndlib\render\util
        namespace util {

            struct PrimServer 0x1370 {
                
                struct VTable 0x658 {
                    virtual void Render(PrimServer* this_, void* WindowContext) @ 0x8
                    virtual void Render2D(PrimServer* this_, void* WindowContext) @ 0x10
                    virtual void Render3D(PrimServer* this_, void* WindowContext) @ 0x18
                    virtual void InitFrameParams(PrimServer* this_, void* RenderFrameParams) @ 0x1b0
                    virtual void ClearAll(PrimServer* this_) @ 0x1B8
                    virtual void ReleaseMem(PrimServer* this_) @ 0x1C0
                    virtual void ReleaseFrameHeap(PrimServer* this_) @ 0x1C8
                    virtual void SetPaused(PrimServer* this_, bool arg2, bool arg3, int arg4) @ 0x1D0
                    virtual void CullStale(PrimServer* this_) @ 0x1D8
                } 

                struct InitParams 0x4c {
                    uint32_t m_memoryBufferSize[0x13];
                }

                VTable* vftable;
                uint64_t Unk[0x26d];
            }

        }
    }
    

    }

    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\common
    namespace common {}


    // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\corelib
    namespace corelib {

        // c:\branches\discbot??\1xfinal-pc-?.?.?\shared\src\corelib\memory
        namespace memory {

            enum Context : uint32_t {
                kAllocInvalid = 0x0,
                kAllocUnknown = 0x1,
                kAllocSystemDirect = 0x2,
                kAllocSystemFlexible = 0x3,
                kAllocSystemDevelopment = 0x4,
                kAllocAppCpu = 0x5,
                kAllocAppCpuLargePage = 0x6,
                kAllocAppGpu = 0x7,
                kAllocAppGpuLargePage = 0x8,
                kAllocAppFlex = 0x9,
                kAllocDevCpu = 0xA,
                kAllocDevCpuLargePage = 0xB,
                kAllocDevGpu = 0xC,
                kAllocDevCpuAlways = 0xD,
                kAllocAnimation = 0xE,
                kAllocWrappedMalloc = 0xF,
                kAllocDebugDevMenu = 0x10,
                kAllocSingleGameFrame = 0x11,
                kAllocDoubleGameFrame = 0x12,
                kAllocDoubleGameplayUpdate = 0x13,
                kAllocGpuStaticRenderTarget = 0x14,
                kAllocGpuStaticTexture = 0x15,
                kAllocGpuTexture = 0x16,
                kAllocGpuTextureStaging = 0x17,
                kAllocGpuTextureStagingShadow = 0x18,
                kAllocGpuLevelTexture = 0x19,
                kAllocGpuLut = 0x1A,
                kAllocGpuBuffer = 0x1B,
                kAllocGpuClothRoBuffer = 0x1C,
                kAllocGpuClothRwBuffer = 0x1D,
                kAllocGpuDeformerBuffer = 0x1E,
                kAllocGpuExposureMapBuffer = 0x1F,
                kAllocGpuExposureMapHeightMaps = 0x20,
                kAllocGpuDynamicRenderTarget = 0x21,
                kAllocDevGpuOverflowRenderTa = 0x22,
                kAllocGpuShader = 0x23,
                kAllocGpuDebugShader = 0x24,
                kAllocScriptData = 0x25,
                kAllocMenu = 0x26,
                kAllocNetwork = 0x27,
                kAllocNetworkProcess = 0x28,
                kAllocMovie = 0x29,
                kAllocDebugAudioBin = 0x2A,
                kAllocDebugVoxBin = 0x2B,
                kAllocVoxTables = 0x2C,
                kAllocAudioEffects = 0x2D,
                kAllocArmWorkData = 0x2E,
                kAllocPhysics = 0x2F,
                kAllocPhysicsPersistent = 0x30,
                kAllocPhysicsOverflow = 0x31,
                kAllocPhysicsSingleFrame = 0x32,
                kAllocPhysicsDoubleBuffer = 0x33,
                kAllocDebugPhysicsSingleFrame = 0x34,
                kAllocParticleDesc = 0x35,
                kAllocParticleManager = 0x36,
                kAllocParticleRuntime = 0x37,
                kAllocProcess = 0x38,
                kAllocLipsync = 0x39,
                kAllocWater = 0x3A,
                kAllocGui2 = 0x3B,
                kAllocGui2GpuTexture = 0x3C,
                kAllocIcon = 0x3D,
                kAllocGui2_ = 0x3E,
                kAllocText2Font = 0x3F,
                kAllocCustom = 0x40,
                kAllocAlignCache = 0x41,
                kAllocGestureCache = 0x42,
                kAllocIkData = 0x43,
                kAllocNdgi = 0x44,
                kAllocRenderPool = 0x45,
                kAllocNdrg = 0x46,
                kAllocDebugBlockmeshMgr = 0x47,
                kAllocGameToGpuRing = 0x48,
                kAllocDoubleGameToGpuRing = 0x49,
                kAllocRenderToGpuRing = 0x4A,
                kAllocDoubleRenderToGpuRing = 0x4B,
                kAllocGameToGpuResourceRing = 0x4C,
                kAllocRenderToGpuResourceRing = 0x4D,
                kAllocDevGameToGpuRing = 0x4E,
                kAllocDevRenderToGpuRing = 0x4F,
                kAllocDevGameToGpuResourceRing = 0x50,
                kAllocDevRenderToGpuResource = 0x51,
                kAllocCpuAccessOnlyRingTag = 0x52,
                kAllocDoubleCpuAccessOnlyRin = 0x53,
                kAllocGpuUploadRingTag = 0x54,
                kAllocGpuReadbackRingTag = 0x55,
                kAllocSingleRenderFrame = 0x56,
                kAllocRenderGlobals = 0x57,
                kAllocPsoCacheTag = 0x58,
                kAllocConstBufferMgr = 0x59,
                kAllocPackagePageHdrs = 0x5A,
                kAllocNpcGlobals = 0x5B,
                kAllocPathfindManager = 0x5C,
                kAllocRainMgr = 0x5D,
                kAllocHud = 0x5E,
                kAllocDevMenuLowMem = 0x5F,
                kAllocProcessMgr = 0x60,
                kAllocComponentMgr = 0x61,
                kAllocPlayerGlobals = 0x62,
                kAllocClothCompute = 0x63,
                kAllocEventQueueScript = 0x64,
                kAllocEventQueueBucket = 0x65,
                kAllocEventQueueMenu = 0x66,
                kAllocVoxRequest = 0x67,
                kAllocPsarcStatic = 0x68,
                kAllocPsarcDynamic = 0x69,
                kAllocVegetation = 0x6A,
                kAllocScreamPluginEventQueue = 0x6B,
                kAllocWavetableSynth = 0x6C,
                kAllocLodManager = 0x6D,
                kAllocDeltaBitstream = 0x6E,
                kMaxNumContexts = 0x6F,
                kAllocSingleFrame = 0x70,
                kAllocGpuRing = 0x71,
                kAllocRenderResourceRingTag = 0x72,
                kAllocDoubleGpuRing = 0x73,
                kAllocDevGpuRing = 0x74,
                kAllocDevRenderResourceRing = 0x75,
            }; // 0x142fcf750

            enum MapId : uint32_t {
                ALLOCATION_PRX_DIRECT_MEM = 0x01,
                ALLOCATION_APP_CPU_LARGE_PAGE_MEMORY = 0x02,
                ALLOCATION_CPU_MEMORY = 0x03,
                ALLOCATION_APP_GPU_LARGE_PAGE_MEMORY = 0x04,
                ALLOCATION_GPU_MEMORY = 0x05,
                ALLOCATION_REQUIRED_PRX_FLEX_MEM = 0x06,
                ALLOCATION_CODE_AND_DATA = 0x07,
                ALLOCATION_THREAD_CONTEXTS = 0x08,
                ALLOCATION_PRX_FLEX_MEM = 0x09,
                ALLOCATION_APP_FLEX_MEM = 0x0A,
                ALLOCATION_DEV_CODE_AND_DATA = 0x0B,
                ALLOCATION_DEV_PRX_MEM = 0x0C,
                ALLOCATION_DEV_CPU_MEM = 0x0D,
                ALLOCATION_DEV_CPU_LARGE_PAGE_MEMORY = 0x0E,
                ALLOCATION_DEV_GPU_MEM = 0x0F,
                ALLOCATION_SCOPED_TEMP_ALLOCS = 0x21,
                ALLOCATION_SCREAM_SND_MEM_USE_STREAMING = 0x7A,
                ALLOCATION_SCREAM_SOUND_BANK_HEAP = 0x7B,
                ALLOCATION_AUDIO_EFFECTS = 0x43,
                ALLOCATION_LOADING_HEAP = 0x55,
                ALLOCATION_LOADING_HEAP_HIDDEN = 0x56,
                ALLOCATION_PSO_PRE_LOADING_HEAP = 0x59,
                ALLOCATION_PROCESS_HEAP = 0x6F,
                ALLOCATION_ANIMATION_HEAP = 0x71,
                ALLOCATION_NETWORK_HEAP = 0x91,
                ALLOCATION_NDGI_HEAP = 0xAE,
                ALLOCATION_RENDER_POOL_HEAP = 0xB0,
                ALLOCATION_PHYSICS_MEMORY = 0x6B,
                ALLOCATION_ICON = 0xCF,
                ALLOCATION_GUI2 = 0xA1,
                ALLOCATION_GUI2_STREAMING = 0xA2,
                ALLOCATION_GUI2_PRIMITIVE_HEAP = 0xA3,
                ALLOCATION_TEXT2_FONT = 0xA0,
                ALLOCATION_WAVETABLE_SYNTH = 0xA5,
                ALLOCATION_TAGGED_HEAP = 0x23,
                ALLOCATION_SINGLE_GAME_FRAME = 0x25,
                ALLOCATION_DOUBLE_GAME_FRAME = 0x26,
                ALLOCATION_DOUBLE_GAMEPLAY_UPDATE = 0x27,
                ALLOCATION_SINGLE_RENDER_FRAME = 0xB1,
                ALLOCATION_GAME_TO_GPU_RING = 0xB2,
                ALLOCATION_DOUBLE_GAME_TO_GPU_RING = 0xB3,
                ALLOCATION_RENDER_TO_GPU_RING = 0xB4,
                ALLOCATION_DOUBLE_RENDER_TO_GPU_RING = 0xB5,
                ALLOCATION_RESOURCES_TO_GPU_RING = 0xB6,
                ALLOCATION_CPU_ACCESS_ONLY_RING = 0xB8,
                ALLOCATION_SHADER = 0xC7,
                ALLOCATION_TEXTURE_READING = 0xDA,
                ALLOCATION_APP_CPU_LARGE_PAGE_UNACCOUNTED = 0x10,
                ALLOCATION_APP_CPU_LARGE_PAGE_FREE = 0x11,
                ALLOCATION_WRAPPED_MALLOC_POOL = 0x22,
                ALLOCATION_IK_DATA = 0x53,
                ALLOCATION_MENU_HEAP = 0x5E,
                ALLOCATION_MUSIC_MGR = 0x5F,
                ALLOCATION_PARTICLE_DESC = 0x68,
                ALLOCATION_PARTICLE_MGR = 0x69,
                ALLOCATION_PARTICLE_RUNTIME = 0x6A,
                ALLOCATION_PHYSICS_PERSIST = 0x6C,
                ALLOCATION_PRINTF_STATIC_BUFFER_MEM = 0x6D,
                ALLOCATION_TEXTDB_MEM = 0x8F,
                ALLOCATION_DYNAMIC_LIGHT_MEM = 0xAB,
                ALLOCATION_FIOS_MEM_POOL = 0x50,
                ALLOCATION_PACKAGE_ARRAY = 0x65,
                ALLOCATION_PACKAGE_PAGE_HEADERS = 0x67,
                ALLOCATION_CBUFFER_MGR = 0x46,
                ALLOCATION_FONTS = 0x51,
                ALLOCATION_LEVEL_DEFS = 0x5A,
                ALLOCATION_LEVEL_STREAMING_MGR = 0x5B,
                ALLOCATION_LVLMGR = 0x5C,
                ALLOCATION_SCRIPT_HEAP = 0x80,
                ALLOCATION_SCRIPT_RELOC_HEAP = 0x83,
                ALLOCATION_SCRIPT_STACK_FRAMES = 0x84,
                ALLOCATION_SCRIPT_SCOPED_ALLOCATIONS = 0x85,
                ALLOCATION_SCRIPT_SYMBOL_TBL = 0x86,
                ALLOCATION_PROCESS_MGR = 0x6E,
                ALLOCATION_TASK_GRAPH = 0x8E,
                ALLOCATION_MESH_RAY_CASTER = 0xAD,
                ALLOCATION_ARM_PROCESS = 0x3E,
                ALLOCATION_ARM_PUSHBUFFER = 0x3F,
                ALLOCATION_ARM_WORKDATA = 0x40,
                ALLOCATION_SCREAM_SND_MEM_USE_SYNTH = 0x77,
                ALLOCATION_SCREAM_SND_MEM_USE_SCRIPTING = 0x78,
                ALLOCATION_SCREAM_SND_MEM_USE_CCS = 0x79,
                ALLOCATION_SCREAM_SOUND_BANK_DS_HEAP = 0x7C,
                ALLOCATION_SCREAM_PLUGIN_EVENT_QUEUE_HEAP = 0x7F,
                ALLOCATION_SOUND_VIRTUAL_BANK = 0x8D,
                ALLOCATION_NCA_BATCH = 0x60,
                ALLOCATION_VIBRATION_MANAGER = 0xA4,
                ALLOCATION_HTTP_POOL_SIZE = 0x34,
                ALLOCATION_FG_ANIM_DATA = 0x49,
                ALLOCATION_FG_ANIM_IDENTITY_MATS = 0x4A,
                ALLOCATION_FG_DRAW_DATA = 0x4C,
                ALLOCATION_FG_ANIMCMD_DATA = 0x4B,
                ALLOCATION_HUD = 0x52,
                ALLOCATION_SAVE_MANAGER = 0x75,
                ALLOCATION_SAVE_CHECKPOINT = 0x74,
                ALLOCATION_BODY_MANAGER = 0x44,
                ALLOCATION_LIP_SYNC_BUFFER = 0x54,
                ALLOCATION_WATER = 0xCE,
                ALLOCATION_RENDER_GLOBALS = 0x72,
                ALLOCATION_PSO_CACHE = 0xD9,
                ALLOCATION_REDIS = 0x38,
                ALLOCATION_DMENU_LOWMEM = 0x47,
                ALLOCATION_AUDIO_VOX = 0x41,
                ALLOCATION_AUDIO_VOX_TABLES = 0x42,
                ALLOCATION_SIMPLE_NPC = 0x8B,
                ALLOCATION_VEGETATION = 0x94,
                ALLOCATION_GAME_CONFIG = 0x95,
                ALLOCATION_ANIM_STREAMING = 0x96,
                ALLOCATION_ANIM_CHAIN = 0x97,
                ALLOCATION_ANIM_DUMMY_INSTANCE = 0x98,
                ALLOCATION_REGION_TAG_TABLE = 0x9A,
                ALLOCATION_RAIN_MGR = 0x9D,
                ALLOCATION_CINEMATICS = 0x9E,
                ALLOCATION_EVENT_QUEUE_SCRIPT_HEAP = 0x28,
                ALLOCATION_EVENT_QUEUE_BUCKET_HEAP = 0x29,
                ALLOCATION_EVENT_QUEUE_MENU_HEAP = 0x2A,
                ALLOCATION_VOX_REQUEST_HEAP = 0x2B,
                ALLOCATION_FRAME_PARAMS = 0x2F,
                ALLOCATION_PREFETCH_BUFFER = 0x30,
                ALLOCATION_TEXTURE_DICT = 0xD7,
                ALLOCATION_TEXTURE_REPORTER = 0xD0,
                ALLOCATION_GESTURE_CACHE = 0x99,
                ALLOCATION_RESOURCE_TABLE = 0x3B,
                ALLOCATION_NDRG_HEAP = 0xAF,
                ALLOCATION_ANIM_ALIGN_CACHE = 0x3D,
                ALLOCATION_COMPONENT_MGR = 0x89,
                ALLOCATION_SUBSYSTEM_HEAP = 0x8A,
                ALLOCATION_STATE_SCRIPT = 0x87,
                ALLOCATION_SMOKE_TEST = 0x8C,
                ALLOCATION_FIOS_STATIC_PSARC = 0xD5,
                ALLOCATION_FIOS_DYNAMIC_PSARC = 0xD6,
                ALLOCATION_SETTINGS_POOL = 0x88,
                ALLOCATION_LVLMGR_NAME_CACHE = 0x5D,
                ALLOCATION_PACKAGE_MGR_RING_BUFFER = 0x66,
                ALLOCATION_NP_POOL_1 = 0x35,
                ALLOCATION_NP_POOL_2 = 0x36,
                ALLOCATION_HTTP_CACHE = 0x33,
                ALLOCATION_PLAYGO_HEAP = 0x9B,
                ALLOCATION_NAV_MESH_MANAGER = 0x61,
                ALLOCATION_NPC_GLOBALS = 0x62,
                ALLOCATION_PATHFIND_MANAGER = 0x63,
                ALLOCATION_FIOS_DEARCHIVER_MEM = 0x31,
                ALLOCATION_PLAYER_GLOBALS = 0x90,
                ALLOCATION_RIGIDBODY_DATA = 0x73,
                ALLOCATION_EVENT_LOG = 0x9C,
                ALLOCATION_CATMULL_ROM = 0x45,
                ALLOCATION_FACTS = 0x48,
                ALLOCATION_PHOTO_MODE = 0x93,
                ALLOCATION_PAD = 0x3C,
                ALLOCATION_WIDGET_MANAGER = 0xA6,
                ALLOCATION_GUI2_GPU = 0xD8,
                ALLOCATION_CLOTH_COMPUTE = 0xD4,
                ALLOCATION_LOD_MANAGER = 0xA9,
                ALLOCATION_VOL_PROBE_LIGHT_CACHE = 0xAA,
                ALLOCATION_APP_CPU_UNACCOUNTED = 0x12,
                ALLOCATION_APP_CPU_FREE = 0x13,
                ALLOCATION_STATIC_TEXTURE = 0xC2,
                ALLOCATION_TEXTURE = 0xC3,
                ALLOCATION_GUI2_TEXTURE = 0xC6,
                ALLOCATION_TEXTURE_STAGING = 0xC4,
                ALLOCATION_LEVEL_TEXTURE = 0xC5,
                ALLOCATION_GPU_UPLOAD_RING = 0xB9,
                ALLOCATION_CLOTH_RO_BUFFER = 0xCA,
                ALLOCATION_CLOTH_RW_BUFFER = 0xCB,
                ALLOCATION_GPU_READBACK_RING = 0xBA,
                ALLOCATION_EXPOSURE_MAP_BUFFER = 0xCC,
                ALLOCATION_EXPOSURE_MAP_HEIGHTMAPS = 0xCD,
                ALLOCATION_APP_GPU_UNACCOUNTED = 0x14,
                ALLOCATION_APP_GPU_FREE = 0x15,
                ALLOCATION_STATIC_RENDER_TARGET = 0xBB,
                ALLOCATION_STATIC_NON_RENDER_TARGET = 0xBC,
                ALLOCATION_STATIC_BUFFER = 0xBD,
                ALLOCATION_DYNAMIC_RENDER_TARGET = 0xBE,
                ALLOCATION_DYNAMIC_NON_RENDER_TARGET = 0xBF,
                ALLOCATION_DYNAMIC_BUFFER = 0xC0,
                ALLOCATION_LUT = 0xC1,
                ALLOCATION_DEFORMER_BUFFER = 0xC9,
                ALLOCATION_RENDER_BUFFER = 0xC8,
                ALLOCATION_LUT_TABLE = 0xAC,
                ALLOCATION_APP_GPU_UNACCOUNTED = 0x16,
                ALLOCATION_APP_GPU_FREE = 0x17,
                ALLOCATION_JOB_SYSTEM = 0x20,
                ALLOCATION_FIOS_RAM_CACHE = 0xD1,
                ALLOCATION_FIOS_PREFETCHER = 0xD3,
                ALLOCATION_APP_FLEX_UNACCOUNTED = 0x18,
                ALLOCATION_APP_FLEX_FREE = 0x19,
                ALLOCATION_OVERFLOW_LOADING_HEAP = 0xE5,
                ALLOCATION_DEBUG_LOADING_HEAP = 0xE7,
                ALLOCATION_DEBUG_PSO_PRE_LOADING_HEAP = 0xE9,
                ALLOCATION_DEBUG_SHADER = 0xEA,
                ALLOCATION_DEV_CPU_UNACCOUNTED = 0x1A,
                ALLOCATION_DEV_CPU_FREE = 0x1B,
                ALLOCATION_TAGGED_DEV_HEAP = 0x24,
                ALLOCATION_DEV_RESOURCES_TO_GPU_RING = 0xF3,
                ALLOCATION_DEBUG_SCREAM_DEBUG = 0xDB,
                ALLOCATION_DEBUG_SCREAM_SERVER_TTY = 0xDC,
                ALLOCATION_DEBUG_SCREAM_SERVER_AUDITIONING = 0xDD,
                ALLOCATION_DEBUG_AUDIO_BIN = 0xDF,
                ALLOCATION_DEBUG_VOX_BIN = 0xE0,
                ALLOCATION_PHYSICS_OVERFLOW_MEMORY = 0xE1,
                ALLOCATION_PROCESS_HEAP_OVERFLOW = 0x70,
                ALLOCATION_SID_DB = 0x3A,
                ALLOCATION_PROFILE_SAMPLE_BUFFERS = 0x2C,
                ALLOCATION_PROFILE_GPU_SAMPLE_BUFFERS = 0x2D,
                ALLOCATION_PROFILE_CMP_SAMPLE_BUFFERS = 0x2E,
                ALLOCATION_SCRIPT_MGR_DECI_INPUT = 0x82,
                ALLOCATION_SCRIPT_DBG_HEAP = 0x81,
                ALLOCATION_NPC_DEBUG_MEM = 0xE4,
                ALLOCATION_DEBUG_DMENU = 0xEE,
                ALLOCATION_DEBUG_ORBIS_EXCEPTION = 0xEF,
                ALLOCATION_DEBUG_DRAWING = 0xF0,
                ALLOCATION_MEMORY_TRACKER = 0x32,
                ALLOCATION_DEV_GAME_TO_GPU_RING = 0xF1,
                ALLOCATION_DEV_RENDER_TO_GPU_RING = 0xF2,
                ALLOCATION_PROFILE_TRACE = 0x9F,
                ALLOCATION_TEXTDB_DEBUG_MEM = 0xF4,
                ALLOCATION_DEV_SCREEN_CAPTURE = 0xF5,
                ALLOCATION_FIOS_RAM_CACHE_PERSISTENT = 0xD2,
                ALLOCATION_DEBUG_BLOCKMESH_MGR = 0xF6,
                ALLOCATION_DEBUG_TOOLS_MGR = 0xF7,
                ALLOCATION_DEV_CPU_UNACCOUNTED = 0x1C,
                ALLOCATION_DEV_CPU_FREE = 0x1D,
                ALLOCATION_DEV_GPU_TARGET_CAPTURE = 0xEB,
                ALLOCATION_PS_CAMERA = 0xEC,
                ALLOCATION_OVERFLOW_DYNAMIC_RENDER_TARGET = 0xF8,
                ALLOCATION_OVERFLOW_DYNAMIC_NON_RENDER_TARGET = 0xF9,
                ALLOCATION_OVERFLOW_DYNAMIC_BUFFER = 0xFA,
                ALLOCATION_DEV_GPU_UNACCOUNTED = 0x1E,
                ALLOCATION_DEV_GPU_FREE = 0x1F
            }

            struct MemoryMapEntry 0x20 {
                MapId m_id
                Context m_context
                uint64_t m_size
                uint64_t m_aligned
                char* m_name [[utf8*]]
            }

            struct Allocator 0x78 {
                void* vftable;
                char* m_context_name + 0x38 [[utf8*]]
                StringId64 m_context_hash
                uintptr_t m_start_addr +0x10
                uintptr_t m_end_addr
                size_t m_heap_size
            }
        }
    }
}

// c:\branches\discbot??\1xfinal-pc-?.?.?\t1x\src
namespace ndgame {
    
    // c:\branches\discbot??\1xfinal-pc-?.?.?\t1x\src\game
    namespace game {

        struct GameInfo : shared.ndlib.NdGameInfo 0x3B0 {
            bool m_enableNpTrophies +0x148  [[bool*]]
            uint64_t Unk_4968 +0x25f
        }

        struct FrameState : shared.ndlib.NdFrameState 0x160 {
              uint64_t Unk[0x2c];
        } 

        // c:\branches\discbot??\1xfinal-pc-?.?.?\t1x\src\game\player
        namespace player {

        }

        // c:\branches\discbot??\1xfinal-pc-?.?.?\t1x\src\game\weapon
        namespace weapon {
            
            // #79C1042C4AB59AA8: hash-table
            struct ScriptWeaponArt {
                struct WeaponArt {
                    char* m_category [[utf8*]];
                    uint64_t m_processid;
                }
    
                uint64_t m_num;
                uint64_t* m_hashs;
                WeaponArt** m_defs;
            };
        }
    }
}

}